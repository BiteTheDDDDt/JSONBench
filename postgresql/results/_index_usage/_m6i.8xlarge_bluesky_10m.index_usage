------------------------------------------------------------------------------------------------------------------------
Index usage for query Q1:

 Sort  (cost=626850.70..626850.73 rows=13 width=40)
   Sort Key: (count(*)) DESC
   ->  Finalize GroupAggregate  (cost=626847.10..626850.45 rows=13 width=40)
         Group Key: (((data -> 'commit'::text) ->> 'collection'::text))
         ->  Gather Merge  (cost=626847.10..626850.13 rows=26 width=40)
               Workers Planned: 2
               ->  Sort  (cost=625847.07..625847.10 rows=13 width=40)
                     Sort Key: (((data -> 'commit'::text) ->> 'collection'::text))
                     ->  Partial HashAggregate  (cost=625846.64..625846.83 rows=13 width=40)
                           Group Key: ((data -> 'commit'::text) ->> 'collection'::text)
                           ->  Parallel Seq Scan on bluesky  (cost=0.00..611285.98 rows=2912132 width=32)
 JIT:
   Functions: 7
   Options: Inlining true, Optimization true, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q2:

 Sort  (cost=3938508.63..3938508.66 rows=13 width=48)
   Sort Key: (count(*)) DESC
   ->  GroupAggregate  (cost=3091871.26..3938508.39 rows=13 width=48)
         Group Key: (((data -> 'commit'::text) ->> 'collection'::text))
         ->  Gather Merge  (cost=3091871.26..3871562.63 rows=6694556 width=572)
               Workers Planned: 2
               ->  Sort  (cost=3090871.24..3097844.74 rows=2789398 width=572)
                     Sort Key: (((data -> 'commit'::text) ->> 'collection'::text)), ((data ->> 'did'::text))
                     ->  Parallel Seq Scan on bluesky  (cost=0.00..647073.95 rows=2789398 width=572)
                           Filter: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text))
 JIT:
   Functions: 8
   Options: Inlining true, Optimization true, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q3:

 Finalize GroupAggregate  (cost=1006179.92..1636995.54 rows=4132549 width=72)
   Group Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
   ->  Gather Merge  (cost=1006179.92..1476859.27 rows=3443790 width=72)
         Workers Planned: 2
         ->  Partial GroupAggregate  (cost=1005179.90..1078360.43 rows=1721895 width=72)
               Group Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
               ->  Sort  (cost=1005179.90..1009484.63 rows=1721895 width=64)
                     Sort Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
                     ->  Parallel Seq Scan on bluesky  (cost=0.00..697350.75 rows=1721895 width=64)
                           Filter: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = ANY ('{app.bsky.feed.post,app.bsky.feed.repost,app.bsky.feed.like}'::text[])))
 JIT:
   Functions: 11
   Options: Inlining true, Optimization true, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q4:

 Limit  (cost=846737.39..846737.39 rows=3 width=40)
   ->  Sort  (cost=846737.39..846984.62 rows=98892 width=40)
         Sort Key: (min(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))))
         ->  GroupAggregate  (cost=0.56..845459.23 rows=98892 width=40)
               Group Key: (data ->> 'did'::text)
               ->  Index Scan using idx_bluesky on bluesky  (cost=0.56..831387.38 rows=641785 width=572)
                     Index Cond: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = 'app.bsky.feed.post'::text))
 JIT:
   Functions: 8
   Options: Inlining true, Optimization true, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q5:

 Limit  (cost=858710.31..858710.32 rows=3 width=64)
   ->  Sort  (cost=858710.31..858957.54 rows=98892 width=64)
         Sort Key: ((EXTRACT(epoch FROM (max(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))) - min(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))))) * '1000'::numeric)) DESC
         ->  GroupAggregate  (cost=0.56..857432.15 rows=98892 width=64)
               Group Key: (data ->> 'did'::text)
               ->  Index Scan using idx_bluesky on bluesky  (cost=0.56..831387.38 rows=641785 width=572)
                     Index Cond: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = 'app.bsky.feed.post'::text))
 JIT:
   Functions: 8
   Options: Inlining true, Optimization true, Expressions true, Deforming true

