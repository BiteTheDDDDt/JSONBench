------------------------------------------------------------------------------------------------------------------------
Index usage for query Q1:

 Sort  (cost=80909.45..80909.49 rows=13 width=40)
   Sort Key: (count(*)) DESC
   ->  Finalize GroupAggregate  (cost=80905.86..80909.21 rows=13 width=40)
         Group Key: (((data -> 'commit'::text) ->> 'collection'::text))
         ->  Gather Merge  (cost=80905.86..80908.89 rows=26 width=40)
               Workers Planned: 2
               ->  Sort  (cost=79905.83..79905.86 rows=13 width=40)
                     Sort Key: (((data -> 'commit'::text) ->> 'collection'::text))
                     ->  Partial HashAggregate  (cost=79905.40..79905.59 rows=13 width=40)
                           Group Key: ((data -> 'commit'::text) ->> 'collection'::text)
                           ->  Parallel Seq Scan on bluesky  (cost=0.00..77821.05 rows=416870 width=32)

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q2:

 Sort  (cost=266251.89..266251.93 rows=13 width=48)
   Sort Key: (count(*)) DESC
   ->  GroupAggregate  (cost=0.55..266251.65 rows=13 width=48)
         Group Key: ((data -> 'commit'::text) ->> 'collection'::text)
         ->  Index Scan using idx_bluesky on bluesky  (cost=0.55..256787.63 rows=946383 width=569)
               Index Cond: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text))
 JIT:
   Functions: 7
   Options: Inlining false, Optimization false, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q3:

 Finalize GroupAggregate  (cost=121017.83..207887.36 rows=569092 width=72)
   Group Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
   ->  Gather Merge  (cost=121017.83..185835.04 rows=474244 width=72)
         Workers Planned: 2
         ->  Partial GroupAggregate  (cost=120017.81..130095.49 rows=237122 width=72)
               Group Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
               ->  Sort  (cost=120017.81..120610.61 rows=237122 width=64)
                     Sort Key: (EXTRACT(hour FROM to_timestamp(((((data ->> 'time_us'::text))::bigint / 1000000))::double precision))), (((data -> 'commit'::text) ->> 'collection'::text))
                     ->  Parallel Seq Scan on bluesky  (cost=0.00..89930.42 rows=237122 width=64)
                           Filter: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = ANY ('{app.bsky.feed.post,app.bsky.feed.repost,app.bsky.feed.like}'::text[])))
 JIT:
   Functions: 11
   Options: Inlining false, Optimization false, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q4:

 Limit  (cost=107376.01..107376.02 rows=3 width=40)
   ->  Sort  (cost=107376.01..107481.32 rows=42123 width=40)
         Sort Key: (min(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))))
         ->  Finalize HashAggregate  (cost=106305.04..106831.58 rows=42123 width=40)
               Group Key: ((data ->> 'did'::text))
               ->  Gather  (cost=97236.61..105934.90 rows=74028 width=40)
                     Workers Planned: 2
                     ->  Partial GroupAggregate  (cost=96236.61..97532.10 rows=37014 width=40)
                           Group Key: ((data ->> 'did'::text))
                           ->  Sort  (cost=96236.61..96329.14 rows=37014 width=569)
                                 Sort Key: ((data ->> 'did'::text))
                                 ->  Parallel Bitmap Heap Scan on bluesky  (cost=7393.18..83939.53 rows=37014 width=569)
                                       Recheck Cond: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = 'app.bsky.feed.post'::text))
                                       ->  Bitmap Index Scan on idx_bluesky  (cost=0.00..7370.98 rows=88834 width=0)
                                             Index Cond: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = 'app.bsky.feed.post'::text))
 JIT:
   Functions: 12
   Options: Inlining false, Optimization false, Expressions true, Deforming true

------------------------------------------------------------------------------------------------------------------------
Index usage for query Q5:

 Limit  (cost=108524.75..108524.75 rows=3 width=64)
   ->  Sort  (cost=108524.75..108630.05 rows=42123 width=64)
         Sort Key: ((EXTRACT(epoch FROM (max(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))) - min(('1970-01-01 00:00:00+00'::timestamp with time zone + ('00:00:00.000001'::interval * (((data ->> 'time_us'::text))::bigint)::double precision))))) * '1000'::numeric)) DESC
         ->  Finalize HashAggregate  (cost=107137.85..107980.31 rows=42123 width=64)
               Group Key: ((data ->> 'did'::text))
               ->  Gather  (cost=97236.61..106582.64 rows=74028 width=48)
                     Workers Planned: 2
                     ->  Partial GroupAggregate  (cost=96236.61..98179.84 rows=37014 width=48)
                           Group Key: ((data ->> 'did'::text))
                           ->  Sort  (cost=96236.61..96329.14 rows=37014 width=569)
                                 Sort Key: ((data ->> 'did'::text))
                                 ->  Parallel Bitmap Heap Scan on bluesky  (cost=7393.18..83939.53 rows=37014 width=569)
                                       Recheck Cond: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = 'app.bsky.feed.post'::text))
                                       ->  Bitmap Index Scan on idx_bluesky  (cost=0.00..7370.98 rows=88834 width=0)
                                             Index Cond: (((data ->> 'kind'::text) = 'commit'::text) AND (((data -> 'commit'::text) ->> 'operation'::text) = 'create'::text) AND (((data -> 'commit'::text) ->> 'collection'::text) = 'app.bsky.feed.post'::text))
 JIT:
   Functions: 12
   Options: Inlining false, Optimization false, Expressions true, Deforming true

